# Generated by Django 5.1 on 2025-07-16 20:07

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ARVRTrainingContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('arvr_file', models.FileField(blank=True, null=True, upload_to='arvr_files/')),
                ('url_link', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyLogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Company Logo', max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConnectEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_id', models.IntegerField()),
                ('mode', models.IntegerField()),
                ('info', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['topic'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_id', models.IntegerField(unique=True)),
                ('mode', models.CharField(max_length=50)),
                ('info', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='connected', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(default='', max_length=20)),
                ('date_of_joining', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HanContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='KeyEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_id', models.IntegerField()),
                ('key_id', models.IntegerField()),
                ('key_sn', models.CharField(default='unknown', max_length=255)),
                ('mode', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('info', models.CharField(max_length=255)),
                ('client_timestamp', models.DateTimeField()),
                ('event_type', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='L2FileUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('l2_file', models.FileField(blank=True, null=True, upload_to='L2file_uploads/')),
                ('url_link', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('level_1', 'Level 1'), ('level_2', 'Level 2'), ('level_3', 'Level 3'), ('level_4', 'Level 4')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='LevelTwoSubUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='machines/')),
                ('level', models.IntegerField()),
                ('process', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MachineAllocationTrackingEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='ManagementReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_year', models.DateField()),
                ('new_operators_joined', models.IntegerField()),
                ('new_operators_trained', models.IntegerField()),
                ('total_training_plans', models.IntegerField()),
                ('total_trainings_actual', models.IntegerField()),
                ('total_defects_msil', models.IntegerField()),
                ('ctq_defects_msil', models.IntegerField()),
                ('total_defects_tier1', models.IntegerField()),
                ('ctq_defects_tier1', models.IntegerField()),
                ('total_internal_rejection', models.IntegerField()),
                ('ctq_internal_rejection', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ObservationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.PositiveIntegerField()),
                ('level', models.CharField(choices=[('1', 'Level 1'), ('2', 'Level 2'), ('3', 'Level 3'), ('4', 'Level 4')], max_length=1)),
                ('content', models.TextField()),
                ('observance_standard', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('minimum_skill_required', models.IntegerField(default=3)),
                ('is_critical', models.BooleanField(default=False)),
                ('is_critical2', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='OperationList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('minimum_skill_required', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='OperatorEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Day 1', 'Day 1'), ('Day 2', 'Day 2'), ('Day 3', 'Day 3'), ('Day 4', 'Day 4'), ('Day 5', 'Day 5'), ('Day 6', 'Day 6')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OperatorEvaluationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_l', models.CharField(choices=[('Day 1', 'Day 1'), ('Day 2', 'Day 2'), ('Day 3', 'Day 3'), ('Day 4', 'Day 4'), ('Day 5', 'Day 5'), ('Day 6', 'Day 6')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OperatorMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sr_no', models.IntegerField(default=0)),
                ('employee_code', models.CharField(default='', max_length=20, unique=True)),
                ('full_name', models.CharField(default='', max_length=100)),
                ('date_of_join', models.DateField(blank=True, null=True)),
                ('employee_pattern_category', models.CharField(default='', max_length=100)),
                ('designation', models.CharField(default='', max_length=100)),
                ('department', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('department_code', models.CharField(blank=True, default='', max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('line_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='QuizQuestionPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SDCOrientationFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainee_name', models.CharField(max_length=100)),
                ('sr_no', models.PositiveIntegerField()),
                ('date_of_training', models.DateField()),
                ('department', models.CharField(choices=[('HR', 'HR'), ('SAFETY', 'SAFETY'), ('Moulding', 'Moulding'), ('Surface Treatment', 'Surface Treatment'), ('Assembly', 'Assembly'), ('QA', 'QA'), ('EMS', 'EMS')], max_length=50)),
                ('trainer_name', models.CharField(max_length=100)),
                ('doj', models.DateField()),
                ('not_understood', models.CharField(blank=True, max_length=50)),
                ('good', models.CharField(blank=True, max_length=50)),
                ('very_good', models.CharField(blank=True, max_length=50)),
                ('better', models.CharField(blank=True, max_length=50)),
                ('best', models.CharField(blank=True, max_length=50)),
                ('suggestion', models.TextField(blank=True, null=True)),
                ('trainee_signature', models.CharField(blank=True, max_length=100)),
                ('training_incharge_signature', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ShoContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SkillMatrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
                ('updated_on', models.DateField()),
                ('next_review', models.DateField()),
                ('doc_no', models.CharField(max_length=50)),
                ('prepared_by', models.CharField(blank=True, max_length=100, null=True)),
                ('uploaded_by', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkillMatrixMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=200)),
                ('updated_on', models.DateField()),
                ('next_review_date', models.DateField()),
                ('reviewed_by', models.CharField(max_length=100)),
                ('prepared_by', models.CharField(blank=True, max_length=100, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkillsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_number', models.IntegerField(unique=True)),
                ('skill', models.CharField(default='', max_length=100)),
                ('minimum_skill_required', models.CharField(max_length=100)),
                ('min_operator_required', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Tencycletopics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slno', models.IntegerField()),
                ('cycle_topics', models.CharField(max_length=200)),
                ('sub_topic', models.CharField(blank=True, max_length=200, null=True)),
                ('score_required', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TencycletopicsLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slno_l', models.IntegerField()),
                ('cycle_topics_l', models.CharField(max_length=200)),
                ('sub_topic_l', models.CharField(blank=True, max_length=200, null=True)),
                ('score_required_l', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('line_no', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Trainer_name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Training_category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TrainingReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('new_operators_joined', models.PositiveIntegerField(default=0)),
                ('new_operators_trained', models.PositiveIntegerField(default=0)),
                ('total_trainings_planned', models.PositiveIntegerField(default=0)),
                ('total_trainings_actual', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UnifiedDefectReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('category', models.CharField(choices=[('MSIL', 'MSIL'), ('Tier-1', 'Tier-1'), ('All Plants', 'All Plants'), ('CTQ', 'CTQ')], max_length=30)),
                ('total_defects', models.PositiveIntegerField(default=0)),
                ('ctq_defects', models.PositiveIntegerField(default=0)),
                ('total_internal_rejection', models.PositiveIntegerField(default=0)),
                ('ctq_internal_rejection', models.PositiveIntegerField(default=0)),
                ('tier1_total_defects', models.PositiveIntegerField(default=0)),
                ('tier1_ctq_defects', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='uploads/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Venues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VoteEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_id', models.IntegerField()),
                ('mode', models.IntegerField()),
                ('info', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('employeeid', models.CharField(max_length=10, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('role', models.CharField(choices=[('developer', 'Developer'), ('management', 'Management'), ('admin', 'Admin'), ('instructor', 'Instructor'), ('operator', 'Operator')], default='', max_length=20)),
                ('hq', models.CharField(blank=True, max_length=50, null=True)),
                ('factory', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CurriculumContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_name', models.CharField(max_length=200)),
                ('content_type', models.CharField(choices=[('document', 'Document'), ('image', 'Image'), ('link', 'Link')], max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='training_contents/')),
                ('link', models.URLField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='app1.curriculum')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='app1.factory')),
            ],
        ),
        migrations.CreateModel(
            name='AdvancedManpowerCTQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_year_ctq', models.DateField()),
                ('total_stations_ctq', models.IntegerField(blank=True, null=True)),
                ('operator_required_ctq', models.IntegerField(blank=True, null=True)),
                ('operator_availability_ctq', models.IntegerField(blank=True, null=True)),
                ('buffer_manpower_required_ctq', models.IntegerField(blank=True, null=True)),
                ('buffer_manpower_availability_ctq', models.IntegerField(blank=True, null=True)),
                ('attrition_trend_ctq', models.IntegerField(blank=True, null=True)),
                ('absentee_trend_ctq', models.IntegerField(blank=True, null=True)),
                ('planned_units_ctq', models.IntegerField(blank=True, null=True)),
                ('actual_production_ctq', models.IntegerField(blank=True, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ctq_records', to='app1.department')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ctq_records', to='app1.factory')),
            ],
        ),
        migrations.CreateModel(
            name='HanTrainingContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('training_file', models.FileField(blank=True, null=True, upload_to='training_files/')),
                ('url_link', models.URLField(blank=True, max_length=500, null=True)),
                ('han_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='app1.hancontent')),
            ],
        ),
        migrations.AddField(
            model_name='factory',
            name='hq',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='factories', to='app1.hq'),
        ),
        migrations.CreateModel(
            name='KeypadEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_id', models.IntegerField()),
                ('key_sn', models.CharField(max_length=100)),
                ('mode', models.CharField(max_length=50)),
                ('timestamp', models.BigIntegerField()),
                ('info', models.TextField(blank=True, null=True)),
                ('processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='app1.device')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=15)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='app1.level')),
            ],
        ),
        migrations.CreateModel(
            name='LevelTwoSkillTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leveltwo_skill_trainings', to='app1.level')),
            ],
        ),
        migrations.CreateModel(
            name='LevelTwoSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('skill_training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leveltwo_sections', to='app1.leveltwoskilltraining')),
            ],
        ),
        migrations.CreateModel(
            name='LevelTwoTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leveltwo_topics', to='app1.leveltwosection')),
            ],
        ),
        migrations.CreateModel(
            name='LevelTwoSubTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leveltwo_subtopics', to='app1.leveltwotopic')),
            ],
        ),
        migrations.CreateModel(
            name='Level3TrainingContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('training_file', models.FileField(blank=True, null=True, upload_to='levelthree_training_files/')),
                ('url_link', models.URLField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levelthree_contents', to='app1.leveltwotopic')),
            ],
        ),
        migrations.CreateModel(
            name='Level2TrainingContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('training_file', models.FileField(blank=True, null=True, upload_to='leveltwo_training_files/')),
                ('url_link', models.URLField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leveltwo_contents', to='app1.leveltwotopic')),
            ],
        ),
        migrations.CreateModel(
            name='LevelTwoTrainingContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('training_file', models.FileField(blank=True, null=True, upload_to='training_files/')),
                ('url_link', models.URLField(blank=True, max_length=500, null=True)),
                ('subunit', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='leveltwo_contents', to='app1.leveltwosubunit')),
            ],
        ),
        migrations.CreateModel(
            name='LevelTwoUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leveltwo_units', to='app1.days')),
                ('subtopic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leveltwo_units', to='app1.leveltwosubtopic')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leveltwo_units', to='app1.leveltwotopic')),
            ],
        ),
        migrations.AddField(
            model_name='leveltwosubunit',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subunits', to='app1.leveltwounit'),
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='app1.department')),
            ],
        ),
        migrations.AddField(
            model_name='level',
            name='line',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='app1.line'),
        ),
        migrations.CreateModel(
            name='OperatorLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operationlist')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatormaster')),
                ('skill_matrix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.skillmatrix')),
            ],
        ),
        migrations.CreateModel(
            name='OperatorLevelTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveIntegerField()),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.level')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_trackings', to='app1.operatormaster')),
            ],
        ),
        migrations.CreateModel(
            name='OperatorLevelEmailTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveIntegerField()),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.level')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_level_trackings', to='app1.operatormaster')),
            ],
        ),
        migrations.CreateModel(
            name='MachineAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocated_at', models.DateTimeField(auto_now_add=True)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved')], default='approved', max_length=10)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.machine')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatormaster')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doj', models.DateField(verbose_name='Date of Joining')),
                ('trainer_name', models.CharField(max_length=100)),
                ('process_name', models.CharField(max_length=100)),
                ('line_name_or_no', models.CharField(max_length=100)),
                ('document_number', models.CharField(max_length=50)),
                ('revision_number_and_date', models.CharField(max_length=100)),
                ('effective_date', models.DateField()),
                ('retention_period_years', models.PositiveIntegerField()),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_records', to='app1.operatormaster')),
            ],
        ),
        migrations.CreateModel(
            name='OperatorPerformanceEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('shift', models.CharField(max_length=20)),
                ('line', models.CharField(max_length=100)),
                ('process_name', models.CharField(max_length=100)),
                ('operation_no', models.CharField(max_length=50)),
                ('date_of_retraining_completed', models.DateField(blank=True, null=True)),
                ('prepared_by', models.CharField(blank=True, max_length=100, null=True)),
                ('checked_by', models.CharField(blank=True, max_length=100, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=100, null=True)),
                ('cc_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatormaster')),
            ],
        ),
        migrations.CreateModel(
            name='JudgementCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sr_no', models.IntegerField()),
                ('parameter', models.CharField(max_length=100)),
                ('contents', models.TextField()),
                ('judgement', models.CharField(blank=True, max_length=5, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='judgement_criteria', to='app1.operatorperformanceevaluation')),
            ],
        ),
        migrations.CreateModel(
            name='OperatorPerformanceEvaluationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_l', models.DateField()),
                ('shift_l', models.CharField(max_length=20)),
                ('line_l', models.CharField(max_length=100)),
                ('process_name_l', models.CharField(max_length=100)),
                ('operation_no_l', models.CharField(max_length=50)),
                ('date_of_retraining_completed_l', models.DateField(blank=True, null=True)),
                ('prepared_by_l', models.CharField(blank=True, max_length=100, null=True)),
                ('checked_by_l', models.CharField(blank=True, max_length=100, null=True)),
                ('approved_by_l', models.CharField(blank=True, max_length=100, null=True)),
                ('cc_no_l', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatormaster')),
            ],
        ),
        migrations.CreateModel(
            name='OperatorRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(help_text='Any date in the month (used for month tracking)')),
                ('level', models.IntegerField(help_text='Skill level or grade')),
                ('operator_required', models.PositiveIntegerField()),
                ('operator_available', models.PositiveIntegerField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operator_requirements', to='app1.department')),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operator_requirements', to='app1.factory')),
            ],
        ),
        migrations.CreateModel(
            name='PersonnelObservanceSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('result', models.CharField(blank=True, max_length=10)),
                ('prepared_by', models.CharField(max_length=100)),
                ('checked_by', models.CharField(max_length=100)),
                ('approved_by', models.CharField(max_length=100)),
                ('section_head_sign', models.CharField(blank=True, max_length=100)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observance_sheets', to='app1.operatormaster')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observance_sheets', to='app1.process')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.BooleanField()),
                ('observation_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.observationitem')),
                ('sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='app1.personnelobservancesheet')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationFailurePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_note', models.TextField()),
                ('retraining_date', models.DateField(blank=True, null=True)),
                ('trainee_sign', models.CharField(max_length=100)),
                ('trainer_sign', models.CharField(max_length=100)),
                ('observation_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.observationitem')),
                ('sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='failures', to='app1.personnelobservancesheet')),
            ],
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('option_a', models.CharField(max_length=255)),
                ('option_b', models.CharField(max_length=255)),
                ('option_c', models.CharField(max_length=255)),
                ('option_d', models.CharField(max_length=255)),
                ('correct_index', models.IntegerField(choices=[(0, 'A'), (1, 'B'), (2, 'C'), (3, 'D')])),
                ('question_paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='app1.quizquestionpaper')),
            ],
        ),
        migrations.CreateModel(
            name='ReTrainingConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_name', models.CharField(max_length=100)),
                ('line_name_or_no', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document_no', models.CharField(max_length=100)),
                ('retantion_period', models.CharField(max_length=100)),
                ('effective_date', models.CharField(max_length=100)),
                ('rev_no_date', models.CharField(max_length=100)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatormaster')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_no', models.PositiveIntegerField()),
                ('failure_point', models.TextField()),
                ('retraining_date', models.DateField(blank=True, null=True)),
                ('confirm_1', models.CharField(blank=True, choices=[('○', 'Satisfactory'), ('△', 'Needs Retraining')], max_length=2)),
                ('confirm_2', models.CharField(blank=True, choices=[('○', 'Satisfactory'), ('△', 'Needs Retraining')], max_length=2)),
                ('confirm_3', models.CharField(blank=True, choices=[('○', 'Satisfactory'), ('△', 'Needs Retraining')], max_length=2)),
                ('trainee_sign', models.CharField(blank=True, max_length=100)),
                ('trainer_sign', models.CharField(blank=True, max_length=100)),
                ('retraining_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='app1.retrainingconfirmation')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('pending', 'Pending')], default='Scheduled', max_length=20)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('employees', models.ManyToManyField(related_name='schedules', to='app1.operatormaster')),
                ('training_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_topics', to='app1.curriculum')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.trainer_name')),
                ('training_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_categories', to='app1.training_category')),
                ('venue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.venues')),
            ],
        ),
        migrations.CreateModel(
            name='RescheduleLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_date', models.DateField()),
                ('original_time', models.TimeField()),
                ('new_date', models.DateField()),
                ('new_time', models.TimeField()),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reschedule_logs', to='app1.operatormaster')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reschedule_logs', to='app1.schedule')),
            ],
        ),
        migrations.AddField(
            model_name='operationlist',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='app1.section'),
        ),
        migrations.CreateModel(
            name='ShoTrainingContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('training_file', models.FileField(blank=True, null=True, upload_to='training_files/')),
                ('url_link', models.URLField(blank=True, max_length=500, null=True)),
                ('sho_content', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='app1.shocontent')),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='app1.skillmatrix'),
        ),
        migrations.AddField(
            model_name='operationlist',
            name='matrix',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='app1.skillmatrix'),
        ),
        migrations.CreateModel(
            name='MultiSkilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_level', models.CharField(blank=True, max_length=20, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('scheduled', 'Scheduled'), ('inprogress', 'In Progress'), ('rescheduled', 'Rescheduled'), ('completed', 'Completed')], default='active', max_length=20)),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.operationlist')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatormaster')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.section')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.skillmatrix')),
            ],
        ),
        migrations.CreateModel(
            name='SkillTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_trainings', to='app1.level')),
            ],
        ),
        migrations.CreateModel(
            name='OperatorSkillLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('written_test_date', models.DateField(blank=True, null=True)),
                ('written_test_score', models.FloatField(blank=True, null=True)),
                ('practical_test_date', models.DateField(blank=True, null=True)),
                ('practical_test_score', models.FloatField(blank=True, null=True)),
                ('observation_start_date', models.DateField(blank=True, null=True)),
                ('observation_end_date', models.DateField(blank=True, null=True)),
                ('observation_score', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pass', 'Pass'), ('Fail', 'Fail'), ('Pending', 'Pending')], max_length=50)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.level')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_levels', to='app1.operatormaster')),
                ('trainings', models.ManyToManyField(blank=True, to='app1.skilltraining')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField()),
                ('test_name', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('percentage', models.FloatField(default=0)),
                ('passed', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatormaster')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.level')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.quizquestionpaper')),
                ('skill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.station')),
            ],
        ),
        migrations.CreateModel(
            name='SubTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='app1.days')),
                ('skill_training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='app1.skilltraining')),
            ],
        ),
        migrations.CreateModel(
            name='SubTopicContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('subtopic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtopiccontents', to='app1.subtopic')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=255)),
                ('questions_file', models.FileField(blank=True, null=True, upload_to='test_questions/')),
                ('operators', models.ManyToManyField(blank=True, related_name='tests', to='app1.operatormaster')),
                ('subtopic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='app1.subtopic')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('option_a', models.CharField(max_length=255)),
                ('option_b', models.CharField(max_length=255)),
                ('option_c', models.CharField(max_length=255)),
                ('option_d', models.CharField(max_length=255)),
                ('correct_answer', models.CharField(max_length=255)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='app1.test')),
            ],
        ),
        migrations.CreateModel(
            name='OperatorTestAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_on', models.DateField(auto_now_add=True)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatormaster')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.test')),
            ],
            options={
                'unique_together': {('operator', 'test')},
            },
        ),
        migrations.CreateModel(
            name='TrackingEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('tracking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='app1.operatorlevelemailtracking')),
            ],
        ),
        migrations.AddField(
            model_name='curriculum',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='app1.training_category'),
        ),
        migrations.CreateModel(
            name='TrainingActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_no', models.PositiveIntegerField()),
                ('activity_content', models.TextField()),
                ('observance_standard', models.TextField(default='')),
                ('day_15_result', models.CharField(blank=True, max_length=10, null=True)),
                ('day_16_result', models.CharField(blank=True, max_length=10, null=True)),
                ('day_17_result', models.CharField(blank=True, max_length=10, null=True)),
                ('day_18_result', models.CharField(blank=True, max_length=10, null=True)),
                ('day_19_result', models.CharField(blank=True, max_length=10, null=True)),
                ('day_20_result', models.CharField(blank=True, max_length=10, null=True)),
                ('day_21_result', models.CharField(blank=True, max_length=10, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='app1.employeemaster')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('training_file', models.FileField(blank=True, null=True, upload_to='training_files/')),
                ('url_link', models.URLField(blank=True, max_length=500, null=True)),
                ('subtopic_content', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='app1.subtopiccontent')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_number', models.PositiveIntegerField()),
                ('day_1', models.CharField(blank=True, max_length=5, null=True)),
                ('day_2', models.CharField(blank=True, max_length=5, null=True)),
                ('day_3', models.CharField(blank=True, max_length=5, null=True)),
                ('day_4', models.CharField(blank=True, max_length=5, null=True)),
                ('day_5', models.CharField(blank=True, max_length=5, null=True)),
                ('day_6', models.CharField(blank=True, max_length=5, null=True)),
                ('day_7', models.CharField(blank=True, max_length=5, null=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_cycles', to='app1.operatorperformanceevaluation')),
            ],
        ),
        migrations.CreateModel(
            name='VoteSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('config', models.CharField(max_length=200)),
                ('status', models.CharField(default='active', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_sessions', to='app1.device')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.PositiveSmallIntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd')])),
                ('confirmed', models.BooleanField(default=False)),
                ('failure_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='app1.observationfailurepoint')),
            ],
            options={
                'unique_together': {('failure_point', 'round_number')},
            },
        ),
        migrations.CreateModel(
            name='MonthlySkillEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),
                ('year', models.IntegerField()),
                ('content', models.CharField(max_length=100)),
                ('operator_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_skills', to='app1.operatorlevel')),
            ],
            options={
                'unique_together': {('operator_level', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='OperatorRemoteAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_id', models.IntegerField()),
                ('assigned_on', models.DateField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.device')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatortestassignment')),
            ],
            options={
                'unique_together': {('operator', 'device', 'key_id')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('rescheduled', 'Rescheduled')], default='present', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('reschedule_date', models.DateField(blank=True, null=True)),
                ('reschedule_time', models.TimeField(blank=True, null=True)),
                ('reschedule_reason', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='app1.operatormaster')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='app1.schedule')),
            ],
            options={
                'unique_together': {('schedule', 'employee')},
            },
        ),
        migrations.CreateModel(
            name='SkillEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_level', models.IntegerField(choices=[(0, 'Not allowed'), (1, 'Can work under supervision'), (2, 'Can work independently'), (3, 'Can train others')], default=0)),
                ('certified_date', models.DateField(blank=True, null=True)),
                ('number_of_statuses', models.PositiveIntegerField()),
                ('remarks', models.CharField(blank=True, max_length=200)),
                ('total_skilled_persons', models.PositiveIntegerField()),
                ('skill_percentage', models.PositiveIntegerField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='app1.employee')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operation')),
            ],
            options={
                'unique_together': {('employee', 'operation')},
            },
        ),
        migrations.CreateModel(
            name='EvaluationTopicMarks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark_1', models.IntegerField(blank=True, null=True)),
                ('mark_2', models.IntegerField(blank=True, null=True)),
                ('mark_3', models.IntegerField(blank=True, null=True)),
                ('mark_4', models.IntegerField(blank=True, null=True)),
                ('mark_5', models.IntegerField(blank=True, null=True)),
                ('mark_6', models.IntegerField(blank=True, null=True)),
                ('mark_7', models.IntegerField(blank=True, null=True)),
                ('mark_8', models.IntegerField(blank=True, null=True)),
                ('mark_9', models.IntegerField(blank=True, null=True)),
                ('mark_10', models.IntegerField(blank=True, null=True)),
                ('days', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='app1.operatorevaluation')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employeess', to='app1.operatorperformanceevaluation')),
                ('topic_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='app1.tencycletopics')),
            ],
            options={
                'unique_together': {('employee', 'topic_name', 'days')},
            },
        ),
        migrations.CreateModel(
            name='EvaluationTopicMarksLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark_1', models.IntegerField(blank=True, null=True)),
                ('mark_2', models.IntegerField(blank=True, null=True)),
                ('mark_3', models.IntegerField(blank=True, null=True)),
                ('mark_4', models.IntegerField(blank=True, null=True)),
                ('mark_5', models.IntegerField(blank=True, null=True)),
                ('mark_6', models.IntegerField(blank=True, null=True)),
                ('mark_7', models.IntegerField(blank=True, null=True)),
                ('mark_8', models.IntegerField(blank=True, null=True)),
                ('mark_9', models.IntegerField(blank=True, null=True)),
                ('mark_10', models.IntegerField(blank=True, null=True)),
                ('days_l', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics_level', to='app1.operatorevaluationlevel')),
                ('employee_l', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employeess_level', to='app1.operatorperformanceevaluationlevel')),
                ('topic_name_l', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics_level', to='app1.tencycletopicslevel')),
            ],
            options={
                'unique_together': {('employee_l', 'topic_name_l', 'days_l')},
            },
        ),
        migrations.CreateModel(
            name='TestSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100)),
                ('key_id', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.operatormaster')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.level')),
                ('question_paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_sessions', to='app1.quizquestionpaper')),
                ('skill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.station')),
            ],
            options={
                'unique_together': {('test_name', 'key_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='curriculum',
            unique_together={('category', 'topic')},
        ),
    ]
